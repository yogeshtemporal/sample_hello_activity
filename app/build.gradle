/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation group: 'io.temporal', name: 'temporal-sdk', version: '1.18.2'
    implementation group: 'org.slf4j',  name: 'slf4j-nop', version: '2.0.6'
    implementation group: 'io.temporal', name: 'temporal-serviceclient', version: '1.18.2'
    implementation group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.12.1'
    
    testImplementation group: 'io.temporal', name: 'temporal-testing', version: '1.18.2'
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.1.1'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(18)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.temporal.yogesh.HelloActivity'
}

task sayHello(type: JavaExec) {
    mainClass = 'com.temporal.yogesh.HelloActivity'
    classpath = sourceSets.main.runtimeClasspath
}


jar {
    manifest {
        attributes(
                'Main-Class': 'com.temporal.yogesh.HelloActivity'

        )
    }
}
shadowJar {
    mainClassName = "com.temporal.yogesh.HelloActivity"
    mergeServiceFiles()
}
